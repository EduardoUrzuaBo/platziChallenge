from distutils.util import strtobool

from selenium.webdriver.common.by import By
from src.testproject.decorator import report_assertion_errors

from addons.date_time_operations import DateTimeOperations
from addons.random_data_generator import RandomDataGenerator
from addons.random_login_credentials import RandomLoginCredentials

import random
import string

"""
This pytest test was automatically generated by TestProject
    Project: Test Projects
    Package: TestProject.Generated.Tests.TestProjects
    Test: Create an dynamic Account
    Generated by: Eduardo Andres Urzuas (eduardoandresu.u@gmail.com)
    Generated on 09/02/2021, 03:56:35
"""


@report_assertion_errors
def test_main(driver):
    """This test was auto generated from steps of the 'CreateAccount' test."""
    # Test Parameters
    RandomEmail = ""
    RandomCity = ""
    LoginEmail = ""
    Password = ""  # This was a SECRET parameter and therefore its value is empty


    # 1. Click 'Account1'
    account1 = driver.find_element(By.XPATH,
                                   "//a[. = '\n                \n                Account\n            ']")
    account1.click()

    # 2. Click 'Register'
    register = driver.find_element(By.XPATH,
                                   "//a[. = 'Register']")
    register.click()

    # 3. Type 'TestName' in 'firstname'
    firstname = driver.find_element(By.CSS_SELECTOR,
                                    "#firstname")
    firstname.send_keys("Jhon")

    # 4. Type 'TestName' in 'lastname'
    lastname = driver.find_element(By.CSS_SELECTOR,
                                   "#lastname")
    lastname.send_keys("Doe")

    # 5. Get current date
    step_output = driver.addons().execute(
        DateTimeOperations.currentdate(
            format="dd/MM//yyyy"))

    # 6. Click 'email'
    email = driver.find_element(By.CSS_SELECTOR,
                                "#email_address")
    email.click()


    # 7.1 Alternative email address
    #email = driver.find_element(By.CSS_SELECTOR,
    #                                "#email_address")
    #email.send_keys("test@test.com")



    # 7. Generate random email address
    #step_output = driver.addons().execute(
    #   RandomLoginCredentials.randomemail(
    #        localPart="test",
    #        domain="platzi.com",
    #        localPartLength=15,
    #        isLower=bool(strtobool('true')),
    #        isUpper=bool(strtobool('true')),
    #       isSpecial=bool(strtobool('true'))))
    # RandomEmail = step_output

    # 8. Generate random city
    #step_output = driver.addons().execute(
    #    RandomDataGenerator.generatecity(
    #    ))
    # RandomCity = step_output

    # 9. Type '{RandomCity}{RandomEmail}' in 'email'
    email = driver.find_element(By.CSS_SELECTOR,
                                "#email_address")
    email.send_keys(RandomLoginCredentials.random_char(7)+"@gmail.com")


    # 10. Get text from 'email'
    email = driver.find_element(By.CSS_SELECTOR,
                                "#email_address")
    step_output = email.get_attribute("value")
    LoginEmail = step_output

    # 11. Click 'password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#password")
    password.click()

    # 12. Type '{Password}' in 'password'
    password = driver.find_element(By.CSS_SELECTOR,
                                   "#password")
    password.send_keys("Password123")

    # 13. Click 'confirmation'
    confirmation = driver.find_element(By.CSS_SELECTOR,
                                       "#confirmation")
    confirmation.click()

    # 14. Type '{Password}' in 'confirmation'
    confirmation = driver.find_element(By.CSS_SELECTOR,
                                       "#confirmation")
    confirmation.send_keys("Password123")

    # 15. Click 'Register1'
    register1 = driver.find_element(By.XPATH,
                                    "//button[. = 'Register']")
    register1.click()
